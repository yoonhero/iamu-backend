// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement())
  firstName    String
  lastName     String?
  username     String    @unique
  email        String    @unique
  activate     Boolean
  activateCode String?   @unique
  password     String
  bio          String?
  avatar       String?
  videos       Video[]
  likes        Like[]
  Comment      Comment[]
  followers    User[]    @relation("FollowRelation", references: [id])
  following    User[]    @relation("FollowRelation", references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Topic {
  id          Int     @id @default(autoincrement())
  videos      Video[]
  title       String
  description String?
}

model Video {
  id        Int       @id @default(autoincrement())
  User      User      @relation(fields: [userId], references: [id])
  userId    Int
  file      String
  caption   String?
  hashtags  Hashtag[]
  likes     Like[]
  Comment   Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Topic     Topic     @relation(fields: [topicId], references: [id])
  topicId   Int
}

model Hashtag {
  id        Int      @id @default(autoincrement())
  hashtag   String   @unique
  photos    Video[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Like {
  id   Int  @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])

  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Video   Video? @relation(fields: [videoId], references: [id])
  videoId Int?
}

model Comment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  payload   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  Video     Video?   @relation(fields: [videoId], references: [id])
  videoId   Int?
}
